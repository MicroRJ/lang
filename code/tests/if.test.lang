
__logging(false)

let enum int2 = fun(x,y) ? ({"x"=x,"y"=y})

let enum {
	LEFT  = int2(-1, 0),
	RIGHT = int2( 1, 0),
	UP    = int2( 0, 1),
	DOWN  = int2( 0,-1),
}


fun() ? {
	table = {}
	if UP.x == 0 ? elif UP.y == 1 ?
	then {
		table.name = 0
	}
	pf(LEFT,RIGHT,UP,DOWN)
}()

leave 0


if false ? leave true
iff true ? leave true

__logging(true)
let nop = fun() ? {
	pf("here")
	pf("here")
}
pf("here")
if false ? {
	nop
	nop
	nop
	nop
	nop
}
pf("j here")


let test = fun(x,y) ? {
	if x != y ? failed = true
	if x != y ? pf("failed")
}

test(0 <= 1, true)
test(0 <= 1, true)
test(1 <= 1, true)
test(0 >= 0, true)
test(1 >= 1, true)
test(1 >= 0, true)
test(0 && 0 && 0 && 0, 0)
test(0 || 0 || 0 || 0, 0)
test(0 && 0 || 0, 0)
test(0 && 0 || 1, 1)
test(0 && 1 || 2, 1)
test(0 && 0, 0)
test(0 && 1, 0)
test(1 && 1, 1)
test(0 || 0, 0)
test(0 || 1, 1)
test(1 || 1, 1)
test(0 && 0 || 0, 0)


for x in 0..4 ? {
	  if x == 0 ? test(x == 0, true)
	elif x == 1 ? test(x == 1, true)
	elif x == 2 ? test(x == 2, true)
	else test(x >= 3, true)
}

if failed ? {
	pf("failed")
}

leave failed